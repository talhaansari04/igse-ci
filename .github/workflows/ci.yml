name: igse-ci
on:
  workflow_call:
    inputs:
      java-version:
        required: true
        type: string
      service-name:
        required: true
        type: string
#      docker-username:
#        required: true
#        type: string
#      docker-image-name:
#        required: true
#        type: string

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ inputs.service-name }}-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            gradle-${{ runner.os }}-${{ inputs.service-name }}-

      # Step 4: Build and test the application
      - name: Build and test with Gradle
        run: ./gradlew build

#  docker:
#    runs-on: ubuntu-latest
#    needs: ci # Run this job only if the CI job succeeds
#    steps:
#      # Step 1: Checkout code
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      # Step 2: Log in to Docker Hub
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v4
#        with:
#          username: ${{ inputs.docker-username }}
#          password: ${{ secrets.DOCKER_HUB_TOKEN }}
#
#      # Step 3: Build and push Docker image
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v6
#        with:
#          context: . # Path to the Dockerfile location
#          push: true # Push the image to the registry
#          tags: |
#            ${{ inputs.docker-image-name }}:latest
#            ${{ inputs.docker-image-name }}:${{ github.sha }} # Tag with commit SHA